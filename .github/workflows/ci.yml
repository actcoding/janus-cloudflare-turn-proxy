name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

env:
  GO_VERSION: '1.23'
  TASK_VERSION: '3.x'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: arduino/setup-task@v2
        with:
          version: ${{ env.TASK_VERSION }}

      - name: Build
        run: task build:debug
        env:
          BUILD_VERSION: "ci-${{ github.run_number }}"
          BUILD_COMMIT: "${{ github.sha }}"

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5

      - uses: arduino/setup-task@v2
        with:
          version: ${{ env.TASK_VERSION }}

      - name: Run tests
        run: task test

  docker:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - uses: actions/checkout@v4

      - name: Get short SHA
        id: sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          labels: |
            org.opencontainers.image.vendor="act coding GbR"
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_COMMIT=${{ steps.sha.outputs.sha_short }}

  release:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: arduino/setup-task@v2
        with:
          version: ${{ env.TASK_VERSION }}

      - name: Build
        run: task build:release
        env:
          BUILD_VERSION: "${{ github.ref_name }}"
          BUILD_COMMIT: "${{ github.sha }}"
          OUT_FILE: ${{ github.event.repository.name }}-${{ github.ref_name }}

      - id: extract-changelog
        uses: sean0x42/markdown-extract@v2
        with:
          file: CHANGELOG.md
          pattern: ${{ github.ref_name }}
          no-print-matched-heading: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            ## Changelog
            ${{ steps.extract-changelog.outputs.markdown }}
          files: |
            dist/*
